[
  {
    "ContainingType": "EventScheduler.Server.Controllers.AuthController",
    "Method": "auth_user",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userLoginData",
        "Type": "EventScheduler.Server.DTOs.UserLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventScheduler.Server.DTOs.TokenDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.AuthController",
    "Method": "add_user",
    "RelativePath": "api/auth/signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "new_user",
        "Type": "EventScheduler.Server.DTOs.UserSignupDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventScheduler.Server.DTOs.TokenDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.AuthController",
    "Method": "get_users",
    "RelativePath": "api/auth/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "EventScheduler.Server.DTOs.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.EventController",
    "Method": "CreateEvent",
    "RelativePath": "api/events",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventData",
        "Type": "EventScheduler.Server.DTOs.EventDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventScheduler.Server.DTOs.EventDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.EventController",
    "Method": "get_all_events",
    "RelativePath": "api/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventScheduler.Server.DTOs.EventDto, EventScheduler.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.EventController",
    "Method": "get_event",
    "RelativePath": "api/events/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventScheduler.Server.DTOs.EventDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.EventController",
    "Method": "delete_event",
    "RelativePath": "api/events/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.EventController",
    "Method": "update_event",
    "RelativePath": "api/events/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "newEventData",
        "Type": "EventScheduler.Server.DTOs.EventDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.EventController",
    "Method": "get_my_events",
    "RelativePath": "api/events/myevents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "EventScheduler.Server.DTOs.EventDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.TicketController",
    "Method": "get_all_tickets",
    "RelativePath": "api/tickets",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventScheduler.Server.Models.Ticket, EventScheduler.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.TicketController",
    "Method": "ticket_creation",
    "RelativePath": "api/tickets",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ticketpayload",
        "Type": "EventScheduler.Server.DTOs.TicketBuyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventScheduler.Server.DTOs.TicketDto, EventScheduler.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.TicketController",
    "Method": "update_ticket_status",
    "RelativePath": "api/tickets/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "ticket_update",
        "Type": "EventScheduler.Server.DTOs.TicketUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventScheduler.Server.DTOs.TicketDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.TicketController",
    "Method": "event_limit",
    "RelativePath": "api/tickets/counts/{event_id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "event_id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.TicketController",
    "Method": "get_invite_tickets",
    "RelativePath": "api/tickets/invites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventScheduler.Server.DTOs.TicketDto, EventScheduler.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventScheduler.Server.Controllers.TicketController",
    "Method": "get_tickets",
    "RelativePath": "api/tickets/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventScheduler.Server.DTOs.TicketDto, EventScheduler.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]